/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h> 
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>



#define DEFAULT_WIN 0
#define DEFAULT_MAC 1
#define RAISE_WIN 2
#define RAISE_MAC 3
#define LOWER_WIN 4
#define LOWER_MAC 5
#define FUNC_WIN 6
#define FUNC_MAC 7

/* Shortcuts */
#define CUT LC(X)
#define COPY LC(C)
#define PASTE LC(V)
#define UNDO LC(Z)
#define SLALL LC(A)



&mt {
    tapping-term-ms = <200>;
};
/ {
        behaviors {
                hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                quick_tap_ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
                };
        };
        combos {
                compatible = "zmk,combos";

                /*            KEY POSITIONS

                0  1  2  3  4  5    6  7  8  9  10 11 
                12 13 14 15 16 17   18 19 20 21 22 23
                24 25 26 27 28 29   30 31 32 33 34 35
                         36 37 38   39 40 41
                */
                combo_dot { timeout-ms = <50>; key-positions = <32 33>; bindings = <&kp DOT>; layers = <DEFAULT_WIN DEFAULT_MAC>; }; // .
                combo_comma { timeout-ms = <50>; key-positions = <31 32>; bindings = <&kp COMMA>; layers = <DEFAULT_WIN DEFAULT_MAC>; }; // ,
                combo_semicolon { timeout-ms = <50>; key-positions = <21 22>; bindings = <&kp SEMICOLON>; layers = <DEFAULT_WIN DEFAULT_MAC>; }; // ;
                combo_slash { timeout-ms = <50>; key-positions = <33 34>; bindings = <&kp SLASH>; layers = <DEFAULT_WIN DEFAULT_MAC>; }; // /
                combo_lbkt { timeout-ms = <50>; key-positions = <31 32>; bindings = <&kp LBKT>; layers = <LOWER_WIN LOWER_MAC>; }; // ]
                combo_rbkt { timeout-ms = <50>; key-positions = <32 33>; bindings = <&kp RBKT>; layers = <LOWER_WIN LOWER_MAC>; }; // [
                combo_lpar { timeout-ms = <50>; key-positions = <19 20>; bindings = <&kp LPAR>; layers = <LOWER_WIN LOWER_MAC>; }; // (
                combo_rpar { timeout-ms = <50>; key-positions = <20 21>; bindings = <&kp RPAR>; layers = <LOWER_WIN LOWER_MAC>; }; // )
                combo_lbrc { timeout-ms = <50>; key-positions = <7 8>; bindings = <&kp LBRC>; layers = <LOWER_WIN LOWER_MAC>; }; // {
                combo_rbrc { timeout-ms = <50>; key-positions = <8 9>; bindings = <&kp RBRC>; layers = <LOWER_WIN LOWER_MAC>; }; // }
                combo_excl { timeout-ms = <50>; key-positions = <33 34>; bindings = <&kp EXCL>; layers = <LOWER_WIN LOWER_MAC>; }; // !
                combo_euro { timeout-ms = <50>; key-positions = <21 22>; bindings = <&kp RA(N5)>; layers = <RAISE_WIN>; }; // €
                combo_euro_m { timeout-ms = <50>; key-positions = <21 22>; bindings = <&kp LS(LA(N2))>; layers = <RAISE_MAC>; }; // €
                combo_at { timeout-ms = <50>; key-positions = <8 8>; bindings = <&kp AT>; layers = <RAISE_WIN RAISE_MAC>; }; // at
                combo_ss { timeout-ms = <50>; key-positions = <7 8>; bindings = <&kp RA(S)>; layers = <RAISE_WIN>; }; // ss
                combo_caret { timeout-ms = <50>; key-positions = <33 34>; bindings = <&kp CARET>; layers = <RAISE_WIN RAISE_MAC>; }; // ^
        };
        
        keymap {
                compatible = "zmk,keymap";

                default_win_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
//             | GUI | LWR | SHFT|   | CTRL| RSE  | ALT |
                        bindings = <
   &none &kp Q       &kp W        &kp E             &kp R             &kp T          &kp Y               &kp U       &kp I          &kp O        &kp P          &none
   &none &hm LGUI A  &hm LALT S   &hm LCTRL D       &hm LSHFT F       &kp G          &kp H               &hm RSHFT J &hm RCTRL K    &hm LALT L   &hm RGUI SEMI  &none
   &none &kp Z       &kp X        &kp C             &kp V             &kp B          &kp N               &kp M       &kp COMMA      &kp DOT      &kp FSLH       &none
                     &mt LGUI ESC &lt LOWER_WIN TAB &mt LSHFT SPACE   &mt LCTRL BSPC &lt RAISE_WIN ENTER &mt LALT DEL
                        >;
                };
                default_mac_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
//             | CTRL| LWR | SHFT|   | GUI | RSE  | ALT |
                        bindings = <
   &none &kp Q       &kp W        &kp E             &kp R             &kp T          &kp Y               &kp U       &kp I          &kp O        &kp P          &none
   &none &hm LCTRL A &hm LALT S   &hm LCMD D        &hm LSHFT F       &kp G          &kp H               &hm RSHFT J &hm LCMD K     &hm LALT L   &hm RCTRL SEMI &none
   &none &kp Z       &kp X        &kp C             &kp V             &kp B          &kp N               &kp M       &kp COMMA      &kp DOT      &kp FSLH       &none
                     &mt LCTRL ESC &lt LOWER_MAC TAB &mt LSHFT SPACE   &mt LCMD BSPC &lt RAISE_MAC ENTER &mt LALT DEL
                        >;
                };
                raise_win_layer {
// -----------------------------------------------------------------------------------------
// |      |       |       |       |       |   |     |  7  |  8  |  9  |     |
// | undo | Prev  | Play  | Next  | volU  |   |  %  |  4  |  5  |  6  |  $  |
// |      | cut   | copy  | paste | volD  |   |  0  |  1  |  2  |  3  |  =  |
//                | CTRL  | FUNC  | SHFT  |   | GUI |     | ALT |
                        bindings = <
        &none &none    &trans     &trans     &trans           &none                  &none       &kp N7       &kp N8       &kp N9      &none           &none
        &none &kp UNDO &kp C_PREV &kp C_PLAY &kp C_NEXT       &kp C_VOL_UP           &kp PERCENT &hm RSHFT N4 &hm RCTRL N5 &hm LALT N6 &hm RGUI DOLLAR &none
        &none &trans   &kp CUT    &kp COPY   &kp PASTE        &kp C_VOL_DN           &kp N0      &kp N1       &kp N2       &kp N3      &kp EQUAL       &none
                                  &trans     &mt FUNC_WIN TAB &trans                 &trans      &trans       &trans
                        >;
                };
                raise_mac_layer {
// -----------------------------------------------------------------------------------------
// |      |       |       |       |       |   |     |  7  |  8  |  9  |     |
// | undo | Prev  | Play  | Next  | volU  |   |  %  |  4  |  5  |  6  |  $  |
// |      | cut   | copy  | paste | volD  |   |  0  |  1  |  2  |  3  |  =  |
//                | CTRL  | FUNC  | SHFT  |   | GUI |     | ALT |
                        bindings = <
        &none &none     &trans      &trans     &trans           &none                  &none       &kp N7       &kp N8       &kp N9      &none            &none
        &none &kp UNDO  &kp C_PREV  &kp C_PLAY &kp C_NEXT       &kp C_VOL_UP           &kp PERCENT &hm RSHFT N4 &hm RCMD N5  &hm LALT N6 &hm RCTRL DOLLAR &none
        &none &trans    &kp CUT     &kp COPY   &kp PASTE        &kp C_VOL_DN           &kp N0      &kp N1       &kp N2       &kp N3      &kp EQUAL        &none
                                    &trans     &mt FUNC_MAC TAB &trans                 &trans      &trans       &trans
                        >;
                };
                lower_win_layer {
// -----------------------------------------------------------------------------------------
//      |      | POS1  | UP    | END   |       |   |       |   \   |   `   |   ~   |       |
//      | pgDwn| LEFT  | DOWN  | RIGHT | pgUp  |   |   &   |   |   |   "   |   -   |   +   | 
//      | sPos1| sBWrd | sBChr | sFChr | sFWrd |   |   #   |   /   |   '   |   _   |   *   |
//                     | CTRL  |       | SHFT  |   | GUI   |  FUN  |  ALT  |
                        bindings = <
        &none &none        &kp HOME         &kp UP       &kp END       &none                  &none      &kp BSLH           &kp GRAVE     &kp TILDE      &none         &none
        &none &kp PG_DN    &kp LEFT         &kp DOWN     &kp RIGHT     &kp PG_UP              &kp AMPS   &hm RSHFT PIPE     &hm RCTRL DQT &hm LALT MINUS &hm RGUI PLUS &none
        &none &kp LS(HOME) &kp LS(LC(LEFT)) &kp LS(LEFT) &kp LS(RIGHT) &kp LS(LC(RIGHT))      &kp HASH   &kp SLASH          &kp SQT       &kp UNDER      &kp ASTRK     &none
                                            &trans       &trans        &trans                 &trans     &lt FUNC_WIN ENTER &trans
                        >;
                };
                lower_mac_layer {
// -----------------------------------------------------------------------------------------
//      |      | POS1  | UP    | END   |       |   |       |   \   |   `   |   ~   |       |
//      | pgDwn| LEFT  | DOWN  | RIGHT | pgUp  |   |   &   |   |   |   "   |   -   |   +   | 
//      | sPos1| sBWrd | sBChr | sFChr | sFWrd |   |   #   |   /   |   '   |   _   |   *   |
//                     | CTRL  |       | SHFT  |   | GUI   |  FUN  |  ALT  |

                        bindings = <
        &none &none            &kp HOME         &kp UP       &kp END       &none                  &none      &kp BSLH       &kp GRAVE     &kp TILDE      &none          &none 
        &none &kp LG(DOWN)     &kp LEFT         &kp DOWN     &kp RIGHT     &kp LG(UP)             &kp AMPS   &hm RSHFT PIPE &hm RCMD DQT  &hm LALT MINUS &hm RCTRL PLUS &none 
        &none &kp LS(LG(LEFT)) &kp LS(LA(LEFT)) &kp LS(LEFT) &kp LS(RIGHT) &kp LS(LA(RIGHT))      &kp HASH   &kp SLASH      &kp SQT       &kp UNDER      &kp ASTRK      &none 
                                                &trans       &trans        &trans                 &trans     &mo FUNC_MAC   &trans
                        >;
                };     
                func_win_layer {
// -----------------------------------------------------------------------------------------
//      |      |       |       |       |       |   |       |   F7  |   F8  |   F9  |       |
//      |      | BT1   | BT2   | BT3   | USB   |   |   F11 |   F4  |   F5  |   F6  |   F12 | 
//      | BTCLR|       |       |       | MAC   |   |   F10 |   F1  |   F2  |   F3  |       |
//                     | ESC   | TAB   | SPACE |   | BSPC  | ENTER | DEL   |
//                    
                        bindings = <
        &none   &none      &trans       &trans       &trans        &none               &none    &kp F7       &kp F8       &kp F9      &none        &none 
        &none   &trans     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2  &out OUT_TOG        &kp F11  &hm RSHFT F4 &hm RCTRL F5 &hm LALT F6 &hm RGUI F12 &none 
        &none   &bt BT_CLR &trans       &trans       &trans        &to DEFAULT_MAC     &kp F10  &kp F1       &kp F2       &kp F3      &trans       &none 
                                        &trans       &trans        &trans              &trans   &trans       &trans
                        >;
                };
                func_mac_layer {
// -----------------------------------------------------------------------------------------
//      |      |       |       |       |       |   |       |   F7  |   F8  |   F9  |       |
//      |      | BT1   | BT2   | BT3   | USB   |   |   F11 |   F4  |   F5  |   F6  |   F12 | 
//      | BTCLR|       |       |       | WIN   |   |   F10 |   F1  |   F2  |   F3  |       |
//                     | ESC   | TAB   | SPACE |   | BSPC  | ENTER | DEL   |
//                    
                        bindings = <
        &none   &none      &trans       &trans       &trans        &none               &none    &kp F7       &kp F8       &kp F9      &none        &none 
        &none   &trans     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2  &out OUT_TOG        &kp F11  &hm RSHFT F4 &hm RCTRL F5 &hm LALT F6 &hm RGUI F12 &none 
        &none   &bt BT_CLR &trans       &trans       &trans        &to DEFAULT_WIN     &kp F10  &kp F1       &kp F2       &kp F3      &trans       &none 
                                        &trans       &trans        &trans              &trans   &trans       &trans
                        >;
                };

        };
};