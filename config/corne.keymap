/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h> 
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>



#define DEFAULT_WIN 0
#define DEFAULT_MAC 1
#define RAISE_WIN 2
#define RAISE_MAC 3
#define LOWER_WIN 4
#define LOWER_MAC 5
#define UML 6
#define FUNC 7


&mt {
    tapping-term-ms = <200>;
};
/ {
        behaviors {
                hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                quick_tap_ms = <0>;
                flavor = "balanced";
                bindings = <&kp>, <&kp>;
                };
        };
        
        keymap {
                compatible = "zmk,keymap";

                default_win_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
//             | GUI | LWR | SHFT|   | CTRL| RSE  | ALT |
                        bindings = <
   &none &kp Q       &kp W        &kp E             &kp R             &kp T          &kp Y               &kp U     &kp I          &kp O        &kp P          &none
   &none &hm LSHFT A &kp S        &kp D             &kp F             &kp G          &kp H               &kp J     &kp K          &kp L        &hm RSHFT SEMI &none
   &none &hm LCTRL Z &hm LGUI X   &hm LALT C        &kp V             &kp B          &kp N               &kp M     &hm RALT COMMA &hm RGUI DOT &hm RCTRL FSLH &none
                     &mt LGUI ESC &lt LOWER_WIN TAB &mt LSHFT SPACE   &mt LCTRL BSPC &lt RAISE_WIN ENTER &mt LALT DEL
                        >;
                };
                default_mac_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
//             | CTRL| LWR | SHFT|   | GUI | RSE  | ALT |
                        bindings = <
   &none &kp Q       &kp W         &kp E             &kp R             &kp T         &kp Y               &kp U     &kp I          &kp O        &kp P          &none
   &none &hm LSHFT A &kp S         &kp D             &kp F             &kp G         &kp H               &kp J     &kp K          &kp L        &hm RSHFT SEMI &none
   &none &hm LCTRL Z &hm LALT X    &hm LCMD C        &kp V             &kp B         &kp N               &kp M     &kp COMMA      &hm RCMD DOT &hm RALT  FSLH &none
                     &mt LCTRL ESC &lt LOWER_MAC TAB &mt LSHFT SPACE   &mt LCMD BSPC &lt RAISE_MAC ENTER &mt LALT DEL
                        >;
                };
                raise_win_layer {
// -----------------------------------------------------------------------------------------
// | ' | " |  ´  |  `  |     |   |  +  |  7  |  8  |  9  |  *  |
// | @ | % |  &  |  #  |     |   |  -  |  4  |  5  |  6  |  /  |
// | € | $ |  °  |  ^  |     |   |  0  |  1  |  2  |  3  |  =  |
//         | CTRL| FUNC| SHFT|   | GUI |     | ALT |
                        bindings = <
   &none  &kp SQT    &kp DQT   &kp GRAVE &kp GRAVE &trans     &kp PLUS   &kp N7   &kp N8 &kp N9 &kp ASTRK &none
   &none  &kp AT     &kp PRCNT &kp AMPS  &kp HASH  &trans     &kp MINUS  &kp N4   &kp N5 &kp N6 &kp SLASH &none
   &none  &kp RA(N5) &kp DLLR  &kp CARET &kp CARET &trans     &kp N0     &kp N1   &kp N2 &kp N3 &kp EQUAL &none
                               &trans    &mo FUNC  &trans     &trans     &trans   &trans
                        >;
                };
                raise_mac_layer {
// -----------------------------------------------------------------------------------------
// | ' | " |  ´  |  `  |     |   |  +  |  7  |  8  |  9  |  *  |
// | @ | % |  &  |  #  |     |   |  -  |  4  |  5  |  6  |  /  |
// | € | $ |  °  |  ^  |     |   |  0  |  1  |  2  |  3  |  =  |
//         | CTRL| FUNC| SHFT|   | GUI |     | ALT |
                        bindings = <
   &none  &kp SQT    &kp DQT   &kp GRAVE &kp GRAVE &trans     &kp PLUS   &kp N7   &kp N8 &kp N9 &kp ASTRK &none
   &none  &kp AT     &kp PRCNT &kp AMPS  &kp HASH  &trans     &kp MINUS  &kp N4   &kp N5 &kp N6 &kp SLASH &none
   &none  &kp LS(LA(N2)) &kp DLLR  &kp CARET &kp CARET &trans     &kp N0     &kp N1   &kp N2 &kp N3 &kp EQUAL &none
                               &trans    &mo FUNC  &trans     &trans     &trans   &trans
                        >;
                };
                lower_win_layer {
// -----------------------------------------------------------------------------------------
// | volU| pos1|  up | end | pgup|   |  |  |  {  |  }  |  ~  |  *  |
// | volD| left| down| rght|pgdwn|   |  /  |  (  |  )  |  -  |  =  |
// |BTCLR| BT1 | BT2 | BT3 | MAC |   |  \  |  [  |  ]  |  _  |  !  |
//             | CTRL|     | SHFT|   | GUI | UML | ALT |
                        bindings = <
   &none  &kp C_VOL_UP &kp HOME     &kp UP       &kp END      &kp PG_UP              &kp PIPE   &kp LBRC &kp RBRC &kp TILDE &kp ASTRK &none
   &none  &kp C_VOL_DN &kp LEFT     &kp DOWN     &kp RIGHT    &kp PG_UP              &kp SLASH  &kp LPAR &kp RPAR &kp MINUS &kp EQUAL &none
   &none  &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &to DEFAULT_MAC        &kp BSLH   &kp LBKT &kp RBKT &kp UNDER &kp EXCL  &none
                                    &trans       &trans       &trans                 &trans     &sl UML  &trans
                        >;
                };
                lower_mac_layer {
// -----------------------------------------------------------------------------------------
// | volU| pos1|  up | end | pgup|   |  |  |  {  |  }  |  ~  |  *  |
// | volD| left| down| rght|pgdwn|   |  /  |  (  |  )  |  -  |  =  |
// |BTCLR| BT1 | BT2 | BT3 | WIN |   |  \  |  [  |  ]  |  _  |  !  |
//             | CTRL|     | SHFT|   | GUI | UML | ALT |
                        bindings = <
   &none  &kp C_VOL_UP &kp LG(LEFT) &kp UP       &kp LG(RIGHT) &kp LG(UP)             &kp PIPE   &kp LBRC &kp RBRC &kp TILDE &kp ASTRK &none
   &none  &kp C_VOL_DN &kp LEFT     &kp DOWN     &kp RIGHT     &kp LG(DOWN)           &kp SLASH  &kp LPAR &kp RPAR &kp MINUS &kp EQUAL &none
   &none  &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2  &to DEFAULT_WIN        &kp BSLH   &kp LBKT &kp RBKT &kp UNDER &kp EXCL  &none
                                    &trans       &trans        &trans                 &trans     &kp LA(U)  &trans
                        >;
                };     
                uml_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  ü  |  I  |  ö  |  P  |
// |  ä  |  ß  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  |
//             | GUI | LWR | SHFT|   | CTRL| RSE | ALT |
                        bindings = <
   &none  &trans    &trans    &trans &trans &trans     &trans  &kp RA(Y) &trans &kp RA(P) &trans &none
   &none  &kp RA(Q) &kp RA(S) &trans &trans &trans     &trans  &trans    &trans &trans    &trans &none
   &none  &trans    &trans    &trans &trans &trans     &trans  &trans    &trans &trans    &trans &none
                              &trans &trans &trans     &trans  &trans    &trans
                        >;
                };
                func_layer {
// -----------------------------------------------------------------------------------------
// | f1 | f2 | f3 | f4 | f5 |   | f6 | f7 | f8 | f9 | f10|
// | f11| f12|    |    |    |   |    |    |    |    |    |
// |    |    |    |    |PWRN|   |PWRF|    |    |    |    |
//           |GUI |LWR |SHFT|   |CTRL| RSE| ALT|
                        bindings = <
   &none  &kp F1            &kp F2             &kp F3 &kp F4 &kp F5                &kp F6          &kp F7          &kp F8          &kp F9          &kp F10         &none
   &none  &kp F11           &kp F12            &trans &trans &trans                &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_BRI &rgb_ug RGB_SPI &rgb_ug RGB_EFF &none
   &none  &ext_power EP_ON  &ext_power EP_OFF  &trans &trans &rgb_ug RGB_TOG       &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_BRD &rgb_ug RGB_SPD &rgb_ug RGB_EFR &none
                                               &trans &trans &trans                &trans          &trans          &trans
                        >;
                };
        };
};